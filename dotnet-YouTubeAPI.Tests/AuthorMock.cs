using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using YouTubeAPI;

namespace dotnet_YouTubeAPI.Tests
{
    /// <summary>
    /// Represents Authors table which contains main information about youtube channel.
    /// </summary>
    public class AuthorMock
    {
        /// <summary>
        /// Gets or sets unique ChannelID of the author in table. Represents primary key in Authors table. Contains unique string generated by YouTube.
        /// </summary>
        [Key]
        public string ChannelId { get; set; }

        /// <summary>
        /// Gets or sets Title of the channel.
        /// </summary>
        public string ChannelTitle { get; set; }

        /// <summary>
        /// Gets or Sets YouTube channel description.
        /// </summary>
        public string ChannelDescription { get; set; }

        /// <summary>
        /// Gets or Sets YouTube channel joining date.
        /// </summary>
        public DateTime JoiningDate { get; set; }

        /// <summary>
        /// Gets or Sets URL for medium channel thumbnail.
        /// </summary>
        public string ThumbnailMedium { get; set; }
        public DateTime SubscribeTime { get; set; }

        /// <summary>
        /// Connection to many entries in AuthorsHistory table which represents one to many relationship.
        /// </summary>
        public virtual ICollection<AuthorsHistory> AuthorsHistory { get; set; }

        /// <summary>
        /// Non-parametric construcor for Authors class.
        /// </summary>
        public AuthorMock()
        {
        }

        /// <summary>
        /// Contructor for Author class. Creates new instance of Author class which represents one entry in Authors table.
        /// </summary>
        /// <param name="Id">YouTube channel ID</param>

        public AuthorMock(string Id)
        {
            ChannelId = Id;
            GetChannelData();
            
        }

        public void GetChannelData()
        {
            ChannelTitle = "Mock Channel Title";
            ChannelDescription = "Mock Channel Description";
            JoiningDate = new DateTime(2023, 07, 05, 12, 00, 00);
            ThumbnailMedium = "Mock Thumbnail Url";
            SubscribeTime = new DateTime(2023, 07, 05, 21, 37, 00);
        }
    }
}
